<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GServDto">
  <!-- Use type aliases to avoid typing the full classname every time. -->
  <resultMap id="GServDtoResult" type="GServDto">
    <result property="gNo" column="gNo"/>
    <result property="gServNo" column="gServNo"/>
    <result property="gServTitle" column="gServTitle"/>
    <result property="gServGps" column="gServGps"/>
    <result property="gServLeadTime" column="gServLeadTime"/>
    <result property="gServSub" column="gServSub"/>
    <result property="gServArea" column="gServArea"/>
    <result property="memSizeMin" column="memSizeMin"/>
    <result property="memSizeMax" column="memSizeMax"/>
    <result property="gServLang" column="gServLang"/>
    <result property="pickUpLoc" column="pickUpLoc"/>
    <result property="pickUpTime" column="pickUpTime"/>
    <result property="pInclude" column="pInclude"/>
    <result property="notPInclude" column="notPInclude"/>
    <result property="caution" column="caution"/>
    <result property="gServSDate" column="gServSDate"/>
    <result property="gServEDate" column="gServEDate"/>
    <result property="gServDay" column="gServDay"/>
    <result property="gServCreDate" column="gServCreDate"/>
    <result property="gServFixDate" column="gServFixDate"/>
    <result property="gServLock" column="gServLock"/>
    <result property="reMemSize" column="reMemSize"/>
    <result property="tourDate" column="tourDate"/>
  </resultMap>
  
   <select id="listAll" parameterType="GServDto" resultMap="GServDtoResult">
      select * from (select rownum rn, a.* from (select * from gService <if test="gServNo != null and gServNo != 0">where gServNo in #{gServNo}</if>
    	 order by gServno ) a <if test="gNo != null and gNo != 0">where gno in #{gNo}</if>) where rn between #{start} and
    	 #{end}	
   </select>
    <select id="totalGServ" resultType="int">
  	select count(*) from gService
   </select>
   <select id="totalGNoServ" parameterType="int" resultType="int">
  	select count(*) from gService where gNo = #{gNo}
   </select>
   
   <select id="oneGServ" parameterType="int" resultType="gServDto">
  		select c1.itemName Subname,
			case 
			when c2.itemcode like '01%' and c2.itemcode!='0100' then '서울시 '
			when c2.itemcode like '02%' and c2.itemcode!='0200' then '부산시 '
			when c2.itemcode like '03%' and c2.itemcode!='0300' then '인천시 '
			when c2.itemcode like '04%' and c2.itemcode!='0400' then '대구시 '
			when c2.itemcode like '05%' and c2.itemcode!='0500' then '대전시 '
			when c2.itemcode like '06%' and c2.itemcode!='0600' then '광주시 '
			when c2.itemcode like '07%' and c2.itemcode!='0700' then '울산시 '
			when c2.itemcode like '08%' and c2.itemcode!='0800' then '강원도 '
			when c2.itemcode like '09%' and c2.itemcode!='0900' then '경기도 '
			when c2.itemcode like '10%' and c2.itemcode!='1000' then '충청북도 '
			when c2.itemcode like '11%' and c2.itemcode!='1100' then '충청남도 '
			when c2.itemcode like '12%' and c2.itemcode!='1200' then '경상북도 '
			when c2.itemcode like '13%' and c2.itemcode!='1300' then '경상남도 '
			when c2.itemcode like '14%' and c2.itemcode!='1400' then '전라북도 '
			when c2.itemcode like '15%' and c2.itemcode!='1500' then '전라남도 '
			when c2.itemcode like '16%' and c2.itemcode!='1600' then '제주도 '
			else ''
			end||c2.itemName AreaName, g.*
			from Gservice g, codeSet c1, codeSet c2
			where  (g.gServSub = c1.itemcode and c1.divcode=02)
			and (g.gServArea = c2.itemcode and c2.divcode=01) and gServNo=#{gServNo}
   </select>
   
   <update id="updateGServ" parameterType="GServContentsVo">
	   	update Gservice set
		  GSERVTITLE = '${gServTitle}', gServGPS = '${gServGps}', gServLeadTime = ${gServLeadTime}, 
		  gServPrice = ${gServPrice}, memSizeMin = ${memSizeMin}, memSizeMax = ${memSizeMax}, 
		  gServLang = '${gServLang}', pickupTime = '${pickUpTime}', ServTag = '${servTag}',
		  pinclude = '${pInclude}', notpinclude = '${notPInclude}',  
		  gServLock = '${gServLock}', GSERVFIXDATE = sysdate
		  <if test="pickUpLoc != null">,pickupLoc = '${pickUpLoc}'</if>
		 <if test="caution != null">,caution = '${caution}'</if>
		 <if test='gServArea.equals("SELECT")'>,GSERVAREA = '${gServArea}'</if>
		  <if test="gServSDate != null">,gServsDate = '${gServSDate}'</if>
		  <if test="gServEDate != null">,gServeDate = '${gServEDate}'</if>
		 <if test="gServSub != null">,gServSub = '${gServSub}'</if>
		<if test="gServDay != null">,gServDay = '${gServDay}'</if>
		where gServNo = ${gServNo}
   </update>
   
   <select id="selGServNo" parameterType="int" resultType="int">
   		select max(gServNo)+1 from gService where gNo=#{gNo}
   </select>
   
   <insert id="inGServ" parameterType="GServContentsVo">
   		insert into Gservice
   		values(#{gNo}, #{gServNo}, #{gServTitle},#{gServGps}, #{gServLeadTime}, #{gServSub}, #{gServArea}, 
   		#{gServPrice}, #{memSizeMin}, #{memSizeMax}, #{gServLang}, #{pickUpLoc}, #{pickUpTime}, #{servTag}, 
   		#{pInclude}, #{notPInclude}, #{caution}, #{gServSDate}, #{gServEDate}, #{gServDay}, sysdate, sysdate, #{gServLock})
   </insert>
   
   <update id="uplock" parameterType="GServDto">
   		update gService set gServLock = #{gServLock} where gServNo = #{gServNo}
   </update>
   <select id="gServResList" parameterType="int" resultMap="GServDtoResult">
   	select g.*, r.sum rememsize, r.tourdate tourdate
	from gService g, (select gServNo, tourdate, sum(rememsize) sum from reservation where gno = #{gNo}  and CANCEL_YN = 'n'  group by gServNo, tourdate) r
	where r.gServno = g.gServNo and g.memSizemin &lt;= r.sum
   </select>
   
   <select id="gServPayList" parameterType="int" resultMap="GServDtoResult">
	   	select g.*, r.sum rememsize, r.tourdate tourdate
		from gService g, (select gServNo, tourdate, sum(rememsize) sum from reservation where gno = #{gNo} and SUCCESS_YN = 'y' and sysdate &gt; TOURDATE  group by gServNo, tourdate) r
		where r.gServno = g.gServNo
		order by r.tourdate desc
   </select>
   
   
  
</mapper>